name,author,start_date,end_date,description,website,category
Operational Semantics of a Functional Programming Language,"Simon Ambler, Roy Crole",,,"Simon Ambler and Roy Crole have used a deep encoding of syntax based on de Bruijn indices to formalize the operational semantics of a small functional programming language. This has enabled standard concepts of program equivalence to be presented uniformly through inductive and coinductive definitions. It is proved formally that applicative bisimulation is a congruence, and that it coincides with Morris-style contextual equivalence. A preliminary report is available as compressed postscript.","http://www.mcs.le.ac.uk/~sambler, http://www.mcs.le.ac.uk/~rcrole/, http://www.mcs.le.ac.uk/~rcrole/papers/mosci98.ps.gz",Formalized Mathematics
Textbook,Tobias Nipkow,,,"Tobias Nipkow has mechanized the first 100 pages of Winskel's The Formal Semantics of Programming Languages, in HOL. This project extends the work of Lötzbeyer and Sandner. [Isabelle]","http://www.in.tum.de/~nipkow/, http://www.in.tum.de/~nipkow/pubs/fac98.html, /community/File:Isabelle_mini.gif",Formalized Mathematics
Algebraic Topology,"Jesús Aransay, Clemens Ballarin, Julio Rubio",,,"Jesús Aransay, Clemens Ballarin, and Julio Rubio work on formalisations in the domain of Algebraic Topology. The computer algebra systems EAT and Kenzo have been used to compute algebraic objects whose correctness hat not been, up to date (2003), confirmed or refuted by other theoretical or mechanical methods. The goal currently pursued is to obtain a mechanical proof of the Basic Perturbation Lemma, which is the theoretical basis for EAT and Kenzo, in Isabelle. An ulterior goal is the validation of algorithms implementing the Basic Perturbation Lemma. See Aransay's PhD thesis ""Mechanized Reasoning in Homological Algebra"", Universidad de La Rioja, 2006.","http://www4.in.tum.de/~ballarin/, http://www-fourier.ujf-grenoble.fr/~sergerar/Kenzo/, http://www.unirioja.es/servicios/sp/tesis/pdfs/tesis34.pdf",Formalized Mathematics
Number Theory,"Jeremy Avigad, David Gray",,,"Jeremy Avigad, David Gray, and Adam Kramer are working to develop number theory in Isabelle. They have formalized Gauss' law of quadratic reciprocity and the prime number theorem. The latter development includes many useful contributions, such as a formalization of O-notation.","http://www.andrew.cmu.edu/~avigad/, http://www.andrew.cmu.edu/~avigad/isabelle/",Formalized Mathematics
HOL proof plans,Louise Dennis,,,"Louise Dennis is using Isabelle/HOL to prove theorems involving coinduction, guiding the proof with proof plans generated by CLaM rather than user interaction. Her method finds bisimulations automatically.","http://www.cs.nott.ac.uk/~lad/, http://dream.dai.ed.ac.uk/, http://dream.dai.ed.ac.uk/projects/proof-plans-faq.html",Formalized Mathematics
Nonstandard Analysis,Jacques Fleuriot,,,Jacques Fleuriot has mechanized the ultrapower construction of the hyperreals from Nonstandard Analysis (NSA) in Isabelle. Concepts from NSA and geometry theorem proving have been combined and applied to the mechanization of Propositions from Newton's Principia for his PhD thesis. This includes the famous Proposition Kepleriana. The framework has also been used to mechanize real analysis using nonstandard techniques.,"http://www.dai.ed.ac.uk/daidb/people/staff/Jacques_Fleuriot.html, http://www.dai.ed.ac.uk/daidb/people/homes/jdf/princip.ps.gz, http://www.springeronline.com/sgw/cda/frontpage/0,10735,3-40109-22-2178552-0,00.html, http://www.dai.ed.ac.uk/daidb/people/homes/jdf/kep.ps.gz",Formalized Mathematics
Axiom of Choice,Krzysztof Grabczewski,,,"Krzysztof Grabczewski has mechanized the first two chapters of Equivalents of the Axiom of Choice by Rubin and Rubin, in ZF. [Isabelle]","http://www.phys.uni.torun.pl/~kgrabcze/, http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-377.html, /community/File:Isabelle_mini.gif",Formalized Mathematics
ZF,Slawomir Kolodynski,,,"Slawomir Kolodynski is building a library of formalized mathematics within ZF. It has theorems about group theory, rings, general topology and a construction of real numbers as classes of integer almost homomorphisms.",http://savannah.nongnu.org/projects/isarmathlib,Formalized Mathematics
Church,Tobias Nipkow,,,"Tobias Nipkow has proved the Church-Rosser Theorem for the lambda-calculus using a novel formalization, covering both the beta and the eta rules. [Isabelle]","http://www.in.tum.de/~nipkow/, http://isabelle.in.tum.de/library/HOL/Lambda/, /community/File:Isabelle_mini.gif",Formalized Mathematics
Mutilated Chess Board,Larry Paulson,,,"Larry Paulson has found a concise formalization and proof of the Mutilated Chess Board problem, using an inductive definition. [Isabelle]","http://www.cl.cam.ac.uk/users/lcp/, http://www.cl.cam.ac.uk/~lp15/papers/Reports/mutil.pdf, /community/File:Isabelle_mini.gif",Formalized Mathematics
Formal Concept Analysis,Baris Sertkaya,,,Baris Sertkaya has proved some fundamental results and the Basic Theorem of Formal Concept Analysis in Isabelle/HOL following the book Formal Concept Analysis by Ganter and Wille. His master's thesis gives documentation and the source code of the formalization.,"http://wwwtcs.inf.tu-dresden.de/~sertkaya/, http://wwwtcs.inf.tu-dresden.de/~sertkaya/ms_thesis",Formalized Mathematics
Region Inference System for Terms,"Ian Westmacott, Robert Muller, Joe Wells",,,"In connection with the Church Project, Ian Westmacott, Robert Muller, and Joe Wells have developed a Tofte-Talpin style region inference system for terms in a polymorphic programming language based on rank-2 intersection types and which subsumes core ML. The inference system, including terms, types, source language semantics and target language (store) semantics are all formalized in Isabelle as is a relation of consistency between values and stores. A number of properties are mechanically proven, including a proof of translation soundness.","http://types.bu.edu, http://www.cs.bc.edu/~muller/",Formalized Mathematics
Termination Tools,"Christian Sternagel, René Thiemann",,,"Christian Sternagel, René Thiemann, and others, use Isabelle/HOL to certify the output of termination tools by means of the code generated (and thus verified) program CeTA. To this end, they have formalized great parts of (abstract) rewriting theory and most of the techniques that are implemented in modern termination tools.","http://www.jaist.ac.jp/~c-sterna/, http://cl-informatik.uibk.ac.at/~thiemann, http://www.termination-portal.org, http://cl-informatik.uibk.ac.at/software/ceta",Formalized Mathematics
Combining Weak Second,"David Basin, Stefan Friedrich",,,"David Basin and Stefan Friedrich have investigated a combination of the weak second-order monadic logic of one successor (WS1S) with higher-order logic (HOL). A semantic embedding of WS1S in HOL provides a basis for a secure integration of the MONA system, a decision procedure for WS1S, as an oracle in Isabelle's HOL. They describe methods for reducing problems formalized in HOL to problems in the language of WS1S, and present applications to arithmetic reasoning and proving properties of parameterized sequential systems.","http://www.inf.ethz.ch/~basin/, http://www.informatik.uni-freiburg.de/~friedric, http://www.brics.dk/~mona/",Logical Investigations
Combinations of Non,"David Basin, Seán Matthews, Luca Viganò",,,"David Basin, Seán Matthews and Luca Viganò are applying Isabelle to study presentations and combinations of non-classical logics (via labelled deductive systems). They have implemented a wide variety of modal logics (including K, D, T, B, KD45, S4, S4.2 S5), as well as several relevance logics. Papers describing the work are available from Luca Viganò.","http://www.inf.ethz.ch/~basin/, http://www.inf.ethz.ch/~vigano/, http://profs.sci.univr.it/~vigano/",Logical Investigations
Display Logic,"Jeremy Dawson, Rajeev Goré",,,"Jeremy Dawson and Rajeev Goré are using Isabelle to mechanize Belnap's Display Logic (Journal of Philosophical Logic, 11:375-417, 1982) and its various extensions. Display Logic is a general methodology for obtaining cut-free Gentzen systems for a huge class of hybrid substructural logics in one uniform setting. To date they have mechanized classical tense logic Kt and the logic of Relation Algebras. For more details, and papers, please contact Rajeev at rpg@arp.anu.edu.au.","http://users.cecs.anu.edu.au/~jeremy/, http://arp.anu.edu.au/~rpg, mailto:rpg@arp.anu.edu.au",Logical Investigations
Object Calculus,Sidi Ould Ehmety,,,"Sidi Ould Ehmety has used Isabelle/ZF set theory to formalize the Object Calculus, which Abadi and Cardelli developed for describing basic concepts of object-oriented programming. In preliminary results, the basic object-calculus (the pure untyped sigma-calculus) has been formalized.",,Logical Investigations
Lax Logic,"Matt Fairtlough, Mike Holcombe, Michael Mendler, Xiaochun Cheng",,,"Matt Fairtlough, Mike Holcombe, Michael Mendler and Xiaochun Cheng are working on the project Lax Logic applied to Formal System Design. The ""Lax"" in ""Lax Logic"" indicates the looseness associated with the notion of correctness-up-to constraints. We are investigating the proof theory and model theory of Lax Logic and have constructed an automatic theorem prover for Lax Logic for use in generating correctness proofs for combinational circuits. Because proofs in Lax Logic are constructive, it is possible to extract data-dependent constraints from them. Lax Logic also promises to be more widely applicable to the formal verification of software and of other types of hardware, as well as to more general notions of constraints and abstractions in artificial intelligence.","http://www.dcs.shef.ac.uk/people/M.Fairtlough/, http://www.dcs.shef.ac.uk/people/M.Holcombe/, http://www.dcs.shef.ac.uk/people/X.Cheng/",Logical Investigations
Variable Typed Logic of Effects,Jacob Frost,,,"Jacob Frost has built an Isabelle implementation of a logic for reasoning about functional programs with imperative allocation, assignment and allocation effects on memory cells. The logic is a variant of VTLoE (Variable Typed Logic of Effects). This modern operational logic allows a large number of program properties to be expressed and reasoned about using a powerful yet simple logical language. His paper, ""An Operational Logic of Effects"", appeared in the Australasian Theorem Symposium (CATS'96).",,Logical Investigations
Partial Predicate Logic,Dirk Van Heule,,,"Dirk Van Heule is using Isabelle as a proof tool for the Partial Predicate Logic. PPC is a three-valued logic, useful for proofs about programs.",http://cage.rug.ac.be/~dvh/,Logical Investigations
Finitary Inductive Definitions,Seán Matthews,,,"Seán Matthews has used Isabelle to implement Feferman's theory of finitary inductive definitions, FS0.",,Logical Investigations
Relation,David von Oheimb,,,"David von Oheimb has implemented a Relation-Algebraic Language and Logic (RALL) with partially automatic proof facilities in Isabelle/HOL. (Reference for Relation Algebra: G. Schmidt and Th. Ströhlein. Relations and Graphs. Springer, 1993.)","http://www.in.tum.de/~oheimb, http://ddvo.net/papers/RALL.html",Logical Investigations
Isabelle Formalization of Logic,"Jasmin Christian Blanchette, Mathias Fleury, Anders Schlichtkrull, Dmitriy Traytel",2015,2016,"Jasmin Christian Blanchette, Mathias Fleury, Anders Schlichtkrull and Dmitriy Traytel in the IsaFoL project formalizing research in automated theorem proving and proving properties of logical calculi.",https://bitbucket.org/jasmin_blanchette/isafol,Logical Investigations
Auctions,"Christoph Lange, Marco B. Caminati, Makarius Wenzel, Manfred Kerber, Colin Rowat",,,"Christoph Lange, Marco B. Caminati, Makarius Wenzel, Manfred Kerber and Colin Rowat are formalising auctions in Isabelle/HOL.  They are working towards an Auction Theory Toolbox, which intends to cover different types of existing auctions, and allows for formalising new auction designs on top of that.  So far, they have focused on static auctions (where all bids are submitted at once, instead of multiple rounds) and formalised Vickrey's canonical theorem on single-good second-price auctions, and they are proving the soundness of Vickrey's combinatorial (i.e. multi-good) second-price auction.  See below for the aspect of generating verified software code from that.","/community/User:ChristophLange, http://uniroma1.academia.edu/MarcoCaminati, http://www.lri.fr/~wenzel/, http://www.cs.bham.ac.uk/~mmk/, http://www.socscistaff.bham.ac.uk/rowat/, http://formare.github.io/auctions/, #Generating_Verified_Auction_Software",Applied Mathematics
Proof and Simulation of Transition Systems,"Pierre Castéran, Davy Rouillard",,,"Pierre Castéran and Davy Rouillard are working on the CClair project. It intends to be a generic tool for proof and simulation activity on various classes of transitions systems. At this time, it uses HOL logic (with Paulson's lazy lists).","http://www.labri.fr/Perso/~casteran/, http://www.ndt.net/article/wcndt00/papers/idn355/idn355.htm",Applied Mathematics
Deductive Tableaux,"Abdelwaheb Ayari, David Basin",,,Abdelwaheb Ayari has interpreted the deductive tableaux system of Manna and Waldinger in Isabelle/HOL (this work is joint with David Basin ). In the future he will investigate the termination of functional programs in Isabelle.,"http://Theory.Stanford.EDU/people/zm/home.html, http://www.inf.ethz.ch/~basin/",Program Development
Program Development Calculi,David Basin,,,"David Basin is applying Isabelle to program development. His work concerns deriving program development calculi in higher-order logic and using higher-order resolution to carry out ""proofs-as-programs"" style program synthesis. Logical Framework Based Program Development gives a high-level overview. A Higher-Order Interpretation of Deductive Tableau describes an application to functional program synthesis and Modeling a Hardware Synthesis Methodology in Isabelle describes an application to hardware synthesis. Finally, Program Development Schemata as Derived Rules looks at applications to program transformation.","http://www.inf.ethz.ch/~basin/, http://www.inf.ethz.ch/~basin/pubs/sope98.ps.gz, http://www.inf.ethz.ch/~basin/pubs/dedtab.ps.gz, http://www.inf.ethz.ch/~basin/pubs/veritas.ps.gz, http://www.inf.ethz.ch/~basin/pubs/prog-schema.ps.gz",Program Development
Logic for Software Development,"Marek Bednarczyk, Tomasz Borzyszkowski",,,"Marek Bednarczyk and Tomasz Borzyszkowski have developing a pLSD (Logic for Software Development). Using the theorem prover turns specification, development and verification into logical activities. A compiler from a simple arithmetical language to a stack machine is proved correct. Also present is the Isabelle/HOL proof (in progress) of the soundness of pLSD. Reports available; see also the Isabelle User Workshop.","http://www.ipipan.gda.pl/~marek/, http://monika.univ.gda.pl/~mattb/, http://www.ipipan.gda.pl/papers/1995.html, http://www.cl.cam.ac.uk/users/lcp/papers/Workshop/",Program Development
Classical Computational Logic,Martin Coen',,,Martin Coen's work on interactive development of functional is Isabelle's the object-logic CCL (Classical Computational Logic). Details may be found in his thesis. [Isabelle],"http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-272.html, /community/File:Isabelle_mini.gif",Program Development
Category Theory etc,"Johan Glimming, Larsson",,,"Johan Glimming (formerly Larsson) mechanized category theory in Isabelle/HOL, studied an encoding of ZF-like sets, and mechanized portions of the Bird-Meertens Formalism for program calculation. He also defined the category GAL of Galois connections and the category CPO of complete partial orders and continuous functions. The work was a MSc project at the University of Oxford. Thesis and code are available.","http://www.nada.kth.se/~glimming/, http://www.nada.kth.se/~glimming/mypubl/pre-MSc/MSc-glimming.pdf, http://www.nada.kth.se/~glimming/mypubl/pre-MSc/MSc-code.tgz",Program Development
Program Transformations,"Kolyang, Thomas Santen, Burkhart Wolff, Burkhart Wolff, Christoph Lüth",,,"Kolyang, Thomas Santen and Burkhart Wolff have embedded program transformations like GlobalSearch and DivideAndConquer into Isabelle (paper available). Burkhart Wolff and Christoph Lüth have provided tool-encapsulation techniques and advanced graphical user interface technology to bridge the gap between the embeddings and a Transformation Tool like TAS (paper available).","http://www.informatik.uni-bremen.de/~kol, http://www.first.gmd.de/persons/Santen.Thomas.html, https://www.lri.fr/~wolff/, http://www.informatik.uni-bremen.de/~bu/papers/yats.ps.gz, http://www.informatik.uni-bremen.de/~cxl, http://www.informatik.uni-bremen.de/~bu/papers/tsv.ps.gz",Program Development
Constructive Z,,,,The project Implementing Constructive Z uses Isabelle to support a software development method linking the Z specification language with intuitionistic and constructive program development methods.,http://cswww.essex.ac.uk/Research/FSS/projects/c-z.html,Specification Languages
Object Constraing Language,"Achim D. Brucker, Burkhart Wolff",,,"Achim D. Brucker and Burkhart Wolff developed a conservative embedding of the Object Constraint Language (OCL) in Isabelle/HOL, called HOL-OCL. HOL-OCL allows one to reason over UML/OCL specifications and builds the basis for both further tool support (e.g. automatic test case generation) and the study of OCL language features (e.g. development of proof calculi and refinement notions for OCL).","http://www.brucker.ch, https://www.lri.fr/~wolff/, http://www.brucker.ch/research/holocl.en.html",Specification Languages
Duration Calculus,Søren Heilmann,,,"Søren Heilmann has developed Isabelle/DC, an encoding of the real-time interval logic Duration Calculus. The encoding is in a sequent style and employs SVC as a decision procedure for real arithmetic.","http://www.sth.dk/sth, http://www.sth.dk/sth/idc.html, http://verify.stanford.edu/SVC/",Specification Languages
XML,"Harald Hiss, Georg Lausen",,,"Harald Hiss and Georg Lausen have been developing a formal model of XML in Isabelle/HOL (for a project called DEAXS, which abbreviates: Deductive Environment for the Analysis of XML-Specifications).","http://www.informatik.uni-freiburg.de/~hiss/, http://dbis.informatik.uni-freiburg.de/index.php?file=lausen.html, http://www.w3.org/XML/, http://www.informatik.uni-freiburg.de/~hiss/deaxs.html",Specification Languages
FOCUS Specification and Verification Methodology,"Robert Sandner, Olaf Müller",,,"Robert Sandner and Olaf Müller have embedded FOCUS, a specification and verification methodology, into Isabelle and applied it to the verification of the production cell. Their paper has appeared in TACAS '97.",http://www4.in.tum.de/~sandnerr/,Specification Languages
Temporal Logic of Actions,Stephan Merz,,,"Stephan Merz has implemented Leslie Lamport's Temporal Logic of Actions (TLA) in Isabelle/HOL. The encoding is based on a simple axiomatic approach to represent modal logics in Isabelle, based on higher-order types and the parameter mechanism to keep track of different worlds, which may be more generally useful. Documentation and sources available.","http://www.pst.informatik.uni-muenchen.de/personen/merz/, http://www.research.digital.com/SRC/staff/lamport/bio.html, http://www.research.digital.com/SRC/personal/Leslie_Lamport/tla/tla.html, http://www.pst.informatik.uni-muenchen.de/personen/merz/isabelle/",Specification Languages
System Modeling and Verification Toolkit,"David von Oheimb, Sebastian Nanz",,,"David von Oheimb and Sebastian Nanz have designed and implemented Interacting State Machines, a formalism and toolkit for system modeling and verification, connected with the CASE tool AutoFocus.","http://ddvo.net/, http://www.doc.ic.ac.uk/~nanz/, http://ddvo.net/ISM/, http://autofocus.in.tum.de/index-e.html",Specification Languages
Program Semantics with States,Larry Paulson,,,"Larry Paulson has mechanized the UNITY language using Isabelle/HOL. Commands are represented by relations over states. A program comprises a set of initial states and set of commands. The approach is definitional, with UNITY specification primitives defined in terms of program semantics and their properties proved. (Paper available.)","http://www.cl.cam.ac.uk/users/lcp/, http://www.cs.utexas.edu/users/psp/welcome.html#unitysec, http://www.cl.cam.ac.uk/users/lcp/papers/UNITY/UNITY.pdf",Specification Languages
Relational Hardware Description Language,Ole Steen Rasmussen,,,Ole Steen Rasmussen has embedded the relational hardware description language Ruby in ZF.,"http://www.cl.cam.ac.uk/users/lcp/papers/rasmussen.ps.gz, http://www.comlab.ox.ac.uk/oucl/users/geraint.jones/ruby/index.html",Specification Languages
Object,"David Spelt, Susan Even",,,"David Spelt and Susan Even have worked on the verification of semantic properties of object-oriented databases. A front-end tool has been implemented in ML to translate class specifications to Isabelle/HOL. Isabelle has been used to verify e.g. consistency (i.e., a method respects a number of static integrity constraints) and compensation (i.e., one method undoes the effects of another). Spelt has submitted his master's thesis to the University of Twente, Netherlands.",,Specification Languages
Concurrent Sequential Processes,"Haykal Tej, Burkhart Wolff",,,"Haykal Tej and Burkhart Wolff have developed (as part of the former UniForM-Project) a conservative embedding of CSP (Concurrent Sequential Processes by Hoare and Roscoe). It allows interactive verifications in process systems, protocols and distributed algorithms over infinite alphabets. (see HOL-CSP).","http://www.informatik.uni-bremen.de/~ht, https://www.lri.fr/~wolff/, http://www.informatik.uni-bremen.de/~bu/isa_doc/CSP/home.html",Specification Languages
CSP,"Yoshinao Isobe, Markus Roggenbach, others",,,"Yoshinao Isobe, Markus Roggenbach and others have developed an ITP on process algebra based on Isabelle/HOL.",https://staff.aist.go.jp/y-isobe/CSP-Prover/CSP-Prover.html,Specification Languages
Generating Verified Auction Software,"Christoph Lange, Marco B. Caminati, Manfred Kerber, Colin Rowat",,,"In the context of their work on formalising auctions (see summary above), Christoph Lange, Marco B. Caminati,  Manfred Kerber and Colin Rowat have generated a verified Scala implementation of a combinatorial (i.e. multi-good) second-price auction using Isabelle's code generator.","http://formare.github.io/auctions/, #Auctions, /community/User:ChristophLange, http://uniroma1.academia.edu/MarcoCaminati, http://www.cs.bham.ac.uk/~mmk/, http://www.socscistaff.bham.ac.uk/rowat/",Verification
Linear Logic,"Sara Kalvala, Valeria de Paiva",,,Sara Kalvala and Valeria de Paiva have implemented Linear Logic and have an ongoing project for developing a verification methodology using Linear Logic.,"http://www.dcs.warwick.ac.uk/people/academic/Sara.Kalvala, http://www.cs.bham.ac.uk/~vdp/, http://www.dcs.warwick.ac.uk/~sk/linproject.ps",Verification
I,Olaf Müller,,,"Olaf Müller has modelled the meta theory of I/O automata in Isabelle/HOLCF. (See his paper in TAPSOFT '97.) He formalizes the communication histories of the automata by lazy lists in domain theory. He is also a co-author of the paper ""Possibly Infinite Sequences: a comparative case study"" in TPHOLs '97 (Springer LNCS 1275, pages 89-104. This paper compares his approach with other formalizations of finite and infinite sequences. As a further application of I/O automata, a version of the alternating bit protocol with unbounded buffers has been verified using a combination of model checking and Isabelle. [Isabelle]","http://www.informatik.tu-muenchen.de/~nipkow/pubs/tacas95.html, /community/File:Isabelle_mini.gif",Verification
Object,"Wolfgang Naraschewski, Markus Wenzel",,,Wolfgang Naraschewski and Markus Wenzel have written a paper dealing with verification of object-oriented programs using extensible records in Isabelle/HOL.,"http://www.in.tum.de/~wenzelm, http://www.in.tum.de/~wenzelm/papers/",Verification
Regular Expressions,Tobias Nipkow,,,Tobias Nipkow has verified an abstract lexical analyzer generator turning regular expressions into automata.,"http://www.in.tum.de/~nipkow/, http://www.in.tum.de/~nipkow/pubs/tphols98.html",Verification
Concurrent Programming,"Tobias Nipkow, Leonor Prensa Nieto",,,Tobias Nipkow and Leonor Prensa Nieto have implemented the Owicki/Gries method for the Hoare-style verification of concurrent programs in Isabelle/HOL.,http://www.in.tum.de/~nipkow/pubs/fase99.html,Verification
Protocol Verification,"Tobias Nipkow, Konrad Slind",,,Tobias Nipkow and Konrad Slind have done a protocol verification using I/O Automata in Isabelle/HOL. [Isabelle],"http://www.in.tum.de/~nipkow/, http://www.in.tum.de/~nipkow/pubs/types94.html, /community/File:Isabelle_mini.gif",Verification
Java Virtual Machine ,,,,"Tobias Nipkow, Cornelia Pusch, David von Oheimb, Gerwin Klein, Leonor Prensa Nieto, Martin Strecker, Norbert Schirmer, and Martin Wildmoser have formalized large parts of the programming language Java and the Java Virtual Machine. For details see the home pages of projects Bali and VerifiCard @ Munich. [Isabelle]","http://isabelle.in.tum.de/~nipkow/, http://ddvo.net/, http://isabelle.in.tum.de/~kleing/, http://www-sop.inria.fr/lemme/Leonor.Prensa/, http://isabelle.in.tum.de/~streckem/, http://isabelle.in.tum.de/~schirmer/, http://isabelle.in.tum.de/~wildmosm/, http://isabelle.in.tum.de/bali, http://isabelle.in.tum.de/verificard/, /community/File:Isabelle_mini.gif",Verification
Cryptographic Protocols,Larry Paulson,,,Larry Paulson has developed a new approach to the verification of cryptographic protocols. The operational semantics of all agents in the network (including an active intruder) is modelled using a series of inductive definitions. [Isabelle],"http://www.cl.cam.ac.uk/users/lcp/, http://www.cl.cam.ac.uk/~lp15/papers/Auth/, /community/File:Isabelle_mini.gif",Verification
Warren Abstract Machine,Cornelia Pusch,,,"Starting from an operational semantics for Prolog, Cornelia Pusch presents some refinement steps towards the Warren Abstract Machine (WAM). The correctness and completeness proofs for each step have been elaborated with the theorem prover Isabelle using the logic HOL. Her paper, ""Verification of compiler correctness for the WAM"", appears in TPHOLs 1996 (Springer LNCS 1125).",,Verification
Miranda Functional Programming Language,"Simon Thompson, Steve Hill",,,Simon Thompson and Steve Hill have used Isabelle to reason about functional programs written in Miranda. Paper available.,"http://www.cs.ukc.ac.uk/people/staff/sjt/, http://www.cs.ukc.ac.uk/pubs/1995/209/",Verification
Nominal Unification,"Christian Urban, verified",,,"Christian Urban has verified a nominal unification algorithm, which solves equations between terms involving binding operations. This algorithm solves such an equation (provided it is solvable at all) by calculating a most general unifier that makes the equated terms alpha-equivalent.","http://www.inf.kcl.ac.uk/staff/urbanc/publications.html, http://www.cl.cam.ac.uk/~cu200/Unification",Verification
Function Blocks in Control Applications,Norbert Völker,,,Norbert Völker is using Isabelle/HOL to verify function blocks in the area of control applications.,"http://cswww.essex.ac.uk/Research/FSS/people/nvoelker-hp.html, http://www.fernuni-hagen.de/DVT/Publikationen/Papers/rt.html",Verification
Hoare Logics,Tjark Weber,,,"Tjark Weber has used separation logic to define three Hoare logics (corresponding to different notions of correctness) for the simple While language extended with commands for heap access and modification. Properties of separating conjunction and separating implication are mechanically verified and used to prove soundness and relative completeness of all three Hoare logics. The whole development, including a formal proof of the Frame Rule, is carried out in Isabelle/HOL. His paper, ""Towards mechanized program verification with separation logic"" has appeared in J. Marcinkowski and A. Tarlecki (Eds.): CSL 2004. Springer LNCS 3210.",http://www4.in.tum.de/~webertj/,Verification
seL4 Microkernel,"David Cock, Kai Engelhardt, Kevin Elphinstone, Jeremy Dawson, Gerwin Klein, Rafal Kolanski, Jia Meng, Michael Norrish, Thomas Sewell, Harvey Tuch, Simon Winwood",,,"David Cock, Kai Engelhardt, Kevin Elphinstone, Jeremy Dawson, Gerwin Klein, Rafal Kolanski, Jia Meng, Michael Norrish, Thomas Sewell, Harvey Tuch and Simon Winwood in the L4.verified project of NICTA are verifying the functional correctness of the seL4 microkernel in Isabelle/HOL. This includes a Hoare Logic proof on the C/assembler implementation of seL4.","http://www.cse.unsw.edu.au/~kaie/, http://www.cse.unsw.edu.au/~kevine/, http://users.rsise.anu.edu.au/~jeremy/, http://www.cse.unsw.edu.au/~kleing/, http://rafalk.web.cse.unsw.edu.au/, http://users.rsise.anu.edu.au/~jiameng/, http://users.rsise.anu.edu.au/~michaeln/, http://www.cse.unsw.edu.au/~tsewell/main.html, http://www.cse.unsw.edu.au/~htuch/, http://www.cse.unsw.edu.au/~sjw/, http://ertos.nicta.com.au/research/l4.verified/, http://nicta.com.au",Verification
Netfilter Iptables Firewall,Cornelius Diekmann,2014,2017,"Cornelius Diekmann et al. are verifying properties of iptables firewall rulesets. The default Linux kernel firewall (netfilter/iptables) is known for its vast amount of features. The project contributes a semantics of the firewall's filtering behavior and presents ""Semantics-Preserving Simplification of Real-World Firewall Rule Sets"" (Formal Methods 2015). With direct application in the computer network domain, the project contributes an algorithm and tool (Haskell, using Isabelle's code generation) for ""Certifying Spoofing-Protection of Firewalls"" (CNSM 2015) and ""Verified iptables Firewall Analysis"" (NETWORKING 2016). [overview talk at 32C3]","http://www.net.in.tum.de/de/mitarbeiter/diekmann/, https://github.com/diekmann/Iptables_Semantics, http://www.net.in.tum.de/fileadmin/bibtex/publications/papers/fm15_Semantics-Preserving_Simplification_of_Real-World_Firewall_Rule_Sets.pdf, http://www.net.in.tum.de/fileadmin/bibtex/publications/papers/diekmann2015_cnsm.pdf, http://www.net.in.tum.de/fileadmin/bibtex/publications/papers/verified_iptables_firewall_analysis.pdf, https://media.ccc.de/v/32c3-7195-verified_firewall_ruleset_verification#video",Verification
